<!-- 
    Notice how this route has a route parameter 'id'. This is how we can pass data to the route.
    See how the links are made in 'PostList.razor'.
-->
@page "/api/posts/{id}"

@using miniapi.Data;
@using shared.Model;
@inject ApiService apiService

<PageTitle>Budget reddit</PageTitle>

<style>
div.contents {
  background-color: #f2f0eb;
  width: 600px;
  border: 2px solid #452d3d;
  padding: 10px;
  margin-top: 20px;
}
</style>

@if (Post == null)
{
    <p><em>Loading...</em></p>
}
else 
{
    <a href="/"><button>Tilbage</button></a>
    <div class="contents">
        <h4><strong>@Post.Title</strong></h4>
        <p><strong>Votes: @(Post.Upvote - Post.Downvote)</strong></p>
        <p>@Post.Content</p>
        <p></p>
        <p>lavet af: @Post.Author</p>
    </div>

    <div class="contents">
        <h4>Comments</h4>
        <table>
            <tr>
                <th>Author</th>
                <th>Comment</th>
                <th>Date</th>
                <th>Upvotes</th>
                <th>Downvotes</th>
            </tr>
            @foreach (var comment in comments)
            {
                <tr>
                    <td>@comment.Author</td>
                    <td>@comment.Content</td>
                    <td>@comment.Date</td>
                    <td>@comment.Upvote</td>
                    <td><button @onclick="() => Upvote(comment.Id)">Upvote</button></td>
                    <td>@comment.Downvote</td>
                    <td><button @onclick="() => Downvote(comment.Id)">Downvote</button></td>
                </tr>
            }
        </table>
    </div>
    <!-- This demonstrates how to pass in PostId to the component 'CreateComment'. See how 
    it is used in the file CreateComment.razor -->
    <CreateComment PostId=@PostId></CreateComment>  
}

@code {
    private Comment[] comments;
    [Parameter]
    public string Id {get; set;}
    public int PostId {get {return int.Parse(Id);}}
    public Post Post {get; set;}
    protected override async Task OnInitializedAsync()
    {
        Post = await apiService.GetPost(PostId);
        comments = await apiService.GetComments(PostId);
    }
    private async void Upvote(int id)
    {
        apiService.UpvoteComment(id);
    }
    private async void Downvote(int id)
    {
        apiService.DownvoteComment(id);
    }
}